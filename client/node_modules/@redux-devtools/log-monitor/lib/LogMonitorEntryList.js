"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _LogMonitorEntry = _interopRequireDefault(require("./LogMonitorEntry"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var LogMonitorEntryList = /*#__PURE__*/function (_PureComponent) {
  _inherits(LogMonitorEntryList, _PureComponent);

  var _super = _createSuper(LogMonitorEntryList);

  function LogMonitorEntryList() {
    _classCallCheck(this, LogMonitorEntryList);

    return _super.apply(this, arguments);
  }

  _createClass(LogMonitorEntryList, [{
    key: "render",
    value: function render() {
      var elements = [];
      var _this$props = this.props,
          theme = _this$props.theme,
          actionsById = _this$props.actionsById,
          computedStates = _this$props.computedStates,
          currentStateIndex = _this$props.currentStateIndex,
          consecutiveToggleStartId = _this$props.consecutiveToggleStartId,
          select = _this$props.select,
          skippedActionIds = _this$props.skippedActionIds,
          stagedActionIds = _this$props.stagedActionIds,
          expandActionRoot = _this$props.expandActionRoot,
          expandStateRoot = _this$props.expandStateRoot,
          markStateDiff = _this$props.markStateDiff,
          onActionClick = _this$props.onActionClick,
          onActionShiftClick = _this$props.onActionShiftClick;

      for (var i = 0; i < stagedActionIds.length; i++) {
        var _actionId = stagedActionIds[i];
        var action = actionsById[_actionId].action;
        var _computedStates$i = computedStates[i],
            _state = _computedStates$i.state,
            error = _computedStates$i.error;
        var previousState = void 0;

        if (i > 0) {
          previousState = computedStates[i - 1].state;
        }

        elements.push( /*#__PURE__*/_react["default"].createElement(_LogMonitorEntry["default"], {
          key: _actionId,
          theme: theme,
          select: select,
          action: action,
          actionId: _actionId,
          state: _state,
          previousState: previousState,
          collapsed: skippedActionIds.indexOf(_actionId) > -1,
          inFuture: i > currentStateIndex,
          selected: consecutiveToggleStartId === i,
          error: error,
          expandActionRoot: expandActionRoot,
          expandStateRoot: expandStateRoot,
          markStateDiff: markStateDiff,
          onActionClick: onActionClick,
          onActionShiftClick: onActionShiftClick
        }));
      }

      return /*#__PURE__*/_react["default"].createElement("div", null, elements);
    }
  }]);

  return LogMonitorEntryList;
}(_react.PureComponent);

exports["default"] = LogMonitorEntryList;

_defineProperty(LogMonitorEntryList, "propTypes", {
  actionsById: _propTypes["default"].object,
  computedStates: _propTypes["default"].array,
  stagedActionIds: _propTypes["default"].array,
  skippedActionIds: _propTypes["default"].array,
  currentStateIndex: _propTypes["default"].number,
  consecutiveToggleStartId: _propTypes["default"].number,
  select: _propTypes["default"].func.isRequired,
  onActionClick: _propTypes["default"].func.isRequired,
  theme: _propTypes["default"].oneOfType([_propTypes["default"].object, _propTypes["default"].string]),
  expandActionRoot: _propTypes["default"].bool,
  expandStateRoot: _propTypes["default"].bool
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Mb2dNb25pdG9yRW50cnlMaXN0LnRzeCJdLCJuYW1lcyI6WyJMb2dNb25pdG9yRW50cnlMaXN0IiwiZWxlbWVudHMiLCJwcm9wcyIsInRoZW1lIiwiYWN0aW9uc0J5SWQiLCJjb21wdXRlZFN0YXRlcyIsImN1cnJlbnRTdGF0ZUluZGV4IiwiY29uc2VjdXRpdmVUb2dnbGVTdGFydElkIiwic2VsZWN0Iiwic2tpcHBlZEFjdGlvbklkcyIsInN0YWdlZEFjdGlvbklkcyIsImV4cGFuZEFjdGlvblJvb3QiLCJleHBhbmRTdGF0ZVJvb3QiLCJtYXJrU3RhdGVEaWZmIiwib25BY3Rpb25DbGljayIsIm9uQWN0aW9uU2hpZnRDbGljayIsImkiLCJsZW5ndGgiLCJhY3Rpb25JZCIsImFjdGlvbiIsInN0YXRlIiwiZXJyb3IiLCJwcmV2aW91c1N0YXRlIiwicHVzaCIsImluZGV4T2YiLCJQdXJlQ29tcG9uZW50IiwiUHJvcFR5cGVzIiwib2JqZWN0IiwiYXJyYXkiLCJudW1iZXIiLCJmdW5jIiwiaXNSZXF1aXJlZCIsIm9uZU9mVHlwZSIsInN0cmluZyIsImJvb2wiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFtQnFCQSxtQjs7Ozs7Ozs7Ozs7OztXQW1CbkIsa0JBQVM7QUFDUCxVQUFNQyxRQUFRLEdBQUcsRUFBakI7QUFDQSx3QkFjSSxLQUFLQyxLQWRUO0FBQUEsVUFDRUMsS0FERixlQUNFQSxLQURGO0FBQUEsVUFFRUMsV0FGRixlQUVFQSxXQUZGO0FBQUEsVUFHRUMsY0FIRixlQUdFQSxjQUhGO0FBQUEsVUFJRUMsaUJBSkYsZUFJRUEsaUJBSkY7QUFBQSxVQUtFQyx3QkFMRixlQUtFQSx3QkFMRjtBQUFBLFVBTUVDLE1BTkYsZUFNRUEsTUFORjtBQUFBLFVBT0VDLGdCQVBGLGVBT0VBLGdCQVBGO0FBQUEsVUFRRUMsZUFSRixlQVFFQSxlQVJGO0FBQUEsVUFTRUMsZ0JBVEYsZUFTRUEsZ0JBVEY7QUFBQSxVQVVFQyxlQVZGLGVBVUVBLGVBVkY7QUFBQSxVQVdFQyxhQVhGLGVBV0VBLGFBWEY7QUFBQSxVQVlFQyxhQVpGLGVBWUVBLGFBWkY7QUFBQSxVQWFFQyxrQkFiRixlQWFFQSxrQkFiRjs7QUFnQkEsV0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHTixlQUFlLENBQUNPLE1BQXBDLEVBQTRDRCxDQUFDLEVBQTdDLEVBQWlEO0FBQy9DLFlBQU1FLFNBQVEsR0FBR1IsZUFBZSxDQUFDTSxDQUFELENBQWhDO0FBQ0EsWUFBTUcsTUFBTSxHQUFHZixXQUFXLENBQUNjLFNBQUQsQ0FBWCxDQUFzQkMsTUFBckM7QUFDQSxnQ0FBeUJkLGNBQWMsQ0FBQ1csQ0FBRCxDQUF2QztBQUFBLFlBQVFJLE1BQVIscUJBQVFBLEtBQVI7QUFBQSxZQUFlQyxLQUFmLHFCQUFlQSxLQUFmO0FBQ0EsWUFBSUMsYUFBYSxTQUFqQjs7QUFDQSxZQUFJTixDQUFDLEdBQUcsQ0FBUixFQUFXO0FBQ1RNLFVBQUFBLGFBQWEsR0FBR2pCLGNBQWMsQ0FBQ1csQ0FBQyxHQUFHLENBQUwsQ0FBZCxDQUFzQkksS0FBdEM7QUFDRDs7QUFDRG5CLFFBQUFBLFFBQVEsQ0FBQ3NCLElBQVQsZUFDRSxnQ0FBQywyQkFBRDtBQUNFLFVBQUEsR0FBRyxFQUFFTCxTQURQO0FBRUUsVUFBQSxLQUFLLEVBQUVmLEtBRlQ7QUFHRSxVQUFBLE1BQU0sRUFBRUssTUFIVjtBQUlFLFVBQUEsTUFBTSxFQUFFVyxNQUpWO0FBS0UsVUFBQSxRQUFRLEVBQUVELFNBTFo7QUFNRSxVQUFBLEtBQUssRUFBRUUsTUFOVDtBQU9FLFVBQUEsYUFBYSxFQUFFRSxhQVBqQjtBQVFFLFVBQUEsU0FBUyxFQUFFYixnQkFBZ0IsQ0FBQ2UsT0FBakIsQ0FBeUJOLFNBQXpCLElBQXFDLENBQUMsQ0FSbkQ7QUFTRSxVQUFBLFFBQVEsRUFBRUYsQ0FBQyxHQUFHVixpQkFUaEI7QUFVRSxVQUFBLFFBQVEsRUFBRUMsd0JBQXdCLEtBQUtTLENBVnpDO0FBV0UsVUFBQSxLQUFLLEVBQUVLLEtBWFQ7QUFZRSxVQUFBLGdCQUFnQixFQUFFVixnQkFacEI7QUFhRSxVQUFBLGVBQWUsRUFBRUMsZUFibkI7QUFjRSxVQUFBLGFBQWEsRUFBRUMsYUFkakI7QUFlRSxVQUFBLGFBQWEsRUFBRUMsYUFmakI7QUFnQkUsVUFBQSxrQkFBa0IsRUFBRUM7QUFoQnRCLFVBREY7QUFvQkQ7O0FBRUQsMEJBQU8sNkNBQU1kLFFBQU4sQ0FBUDtBQUNEOzs7O0VBakVPd0Isb0I7Ozs7Z0JBSFd6QixtQixlQUlBO0FBQ2pCSSxFQUFBQSxXQUFXLEVBQUVzQixzQkFBVUMsTUFETjtBQUVqQnRCLEVBQUFBLGNBQWMsRUFBRXFCLHNCQUFVRSxLQUZUO0FBR2pCbEIsRUFBQUEsZUFBZSxFQUFFZ0Isc0JBQVVFLEtBSFY7QUFJakJuQixFQUFBQSxnQkFBZ0IsRUFBRWlCLHNCQUFVRSxLQUpYO0FBS2pCdEIsRUFBQUEsaUJBQWlCLEVBQUVvQixzQkFBVUcsTUFMWjtBQU1qQnRCLEVBQUFBLHdCQUF3QixFQUFFbUIsc0JBQVVHLE1BTm5CO0FBUWpCckIsRUFBQUEsTUFBTSxFQUFFa0Isc0JBQVVJLElBQVYsQ0FBZUMsVUFSTjtBQVNqQmpCLEVBQUFBLGFBQWEsRUFBRVksc0JBQVVJLElBQVYsQ0FBZUMsVUFUYjtBQVVqQjVCLEVBQUFBLEtBQUssRUFBRXVCLHNCQUFVTSxTQUFWLENBQW9CLENBQUNOLHNCQUFVQyxNQUFYLEVBQW1CRCxzQkFBVU8sTUFBN0IsQ0FBcEIsQ0FWVTtBQVdqQnRCLEVBQUFBLGdCQUFnQixFQUFFZSxzQkFBVVEsSUFYWDtBQVlqQnRCLEVBQUFBLGVBQWUsRUFBRWMsc0JBQVVRO0FBWlYsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBQdXJlQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gJ3JlZHV4JztcbmltcG9ydCB7IFBlcmZvcm1BY3Rpb24gfSBmcm9tICdAcmVkdXgtZGV2dG9vbHMvY29yZSc7XG5pbXBvcnQgeyBCYXNlMTZUaGVtZSB9IGZyb20gJ3JlZHV4LWRldnRvb2xzLXRoZW1lcyc7XG5pbXBvcnQgTG9nTW9uaXRvckVudHJ5IGZyb20gJy4vTG9nTW9uaXRvckVudHJ5JztcblxuaW50ZXJmYWNlIFByb3BzPFMsIEEgZXh0ZW5kcyBBY3Rpb248dW5rbm93bj4+IHtcbiAgYWN0aW9uc0J5SWQ6IHsgW2FjdGlvbklkOiBudW1iZXJdOiBQZXJmb3JtQWN0aW9uPEE+IH07XG4gIGNvbXB1dGVkU3RhdGVzOiB7IHN0YXRlOiBTOyBlcnJvcj86IHN0cmluZyB9W107XG4gIHN0YWdlZEFjdGlvbklkczogbnVtYmVyW107XG4gIHNraXBwZWRBY3Rpb25JZHM6IG51bWJlcltdO1xuICBjdXJyZW50U3RhdGVJbmRleDogbnVtYmVyO1xuICBjb25zZWN1dGl2ZVRvZ2dsZVN0YXJ0SWQ6IG51bWJlciB8IG51bGwgfCB1bmRlZmluZWQ7XG5cbiAgc2VsZWN0OiAoc3RhdGU6IFMpID0+IHVua25vd247XG4gIG9uQWN0aW9uQ2xpY2s6IChpZDogbnVtYmVyKSA9PiB2b2lkO1xuICB0aGVtZTogQmFzZTE2VGhlbWU7XG4gIGV4cGFuZEFjdGlvblJvb3Q6IGJvb2xlYW47XG4gIGV4cGFuZFN0YXRlUm9vdDogYm9vbGVhbjtcbiAgbWFya1N0YXRlRGlmZjogYm9vbGVhbjtcbiAgb25BY3Rpb25TaGlmdENsaWNrOiAoaWQ6IG51bWJlcikgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9nTW9uaXRvckVudHJ5TGlzdDxcbiAgUyxcbiAgQSBleHRlbmRzIEFjdGlvbjx1bmtub3duPlxuPiBleHRlbmRzIFB1cmVDb21wb25lbnQ8UHJvcHM8UywgQT4+IHtcbiAgc3RhdGljIHByb3BUeXBlcyA9IHtcbiAgICBhY3Rpb25zQnlJZDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjb21wdXRlZFN0YXRlczogUHJvcFR5cGVzLmFycmF5LFxuICAgIHN0YWdlZEFjdGlvbklkczogUHJvcFR5cGVzLmFycmF5LFxuICAgIHNraXBwZWRBY3Rpb25JZHM6IFByb3BUeXBlcy5hcnJheSxcbiAgICBjdXJyZW50U3RhdGVJbmRleDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBjb25zZWN1dGl2ZVRvZ2dsZVN0YXJ0SWQ6IFByb3BUeXBlcy5udW1iZXIsXG5cbiAgICBzZWxlY3Q6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgb25BY3Rpb25DbGljazogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICB0aGVtZTogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm9iamVjdCwgUHJvcFR5cGVzLnN0cmluZ10pLFxuICAgIGV4cGFuZEFjdGlvblJvb3Q6IFByb3BUeXBlcy5ib29sLFxuICAgIGV4cGFuZFN0YXRlUm9vdDogUHJvcFR5cGVzLmJvb2wsXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IGVsZW1lbnRzID0gW107XG4gICAgY29uc3Qge1xuICAgICAgdGhlbWUsXG4gICAgICBhY3Rpb25zQnlJZCxcbiAgICAgIGNvbXB1dGVkU3RhdGVzLFxuICAgICAgY3VycmVudFN0YXRlSW5kZXgsXG4gICAgICBjb25zZWN1dGl2ZVRvZ2dsZVN0YXJ0SWQsXG4gICAgICBzZWxlY3QsXG4gICAgICBza2lwcGVkQWN0aW9uSWRzLFxuICAgICAgc3RhZ2VkQWN0aW9uSWRzLFxuICAgICAgZXhwYW5kQWN0aW9uUm9vdCxcbiAgICAgIGV4cGFuZFN0YXRlUm9vdCxcbiAgICAgIG1hcmtTdGF0ZURpZmYsXG4gICAgICBvbkFjdGlvbkNsaWNrLFxuICAgICAgb25BY3Rpb25TaGlmdENsaWNrLFxuICAgIH0gPSB0aGlzLnByb3BzO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdGFnZWRBY3Rpb25JZHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGFjdGlvbklkID0gc3RhZ2VkQWN0aW9uSWRzW2ldO1xuICAgICAgY29uc3QgYWN0aW9uID0gYWN0aW9uc0J5SWRbYWN0aW9uSWRdLmFjdGlvbjtcbiAgICAgIGNvbnN0IHsgc3RhdGUsIGVycm9yIH0gPSBjb21wdXRlZFN0YXRlc1tpXTtcbiAgICAgIGxldCBwcmV2aW91c1N0YXRlO1xuICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgIHByZXZpb3VzU3RhdGUgPSBjb21wdXRlZFN0YXRlc1tpIC0gMV0uc3RhdGU7XG4gICAgICB9XG4gICAgICBlbGVtZW50cy5wdXNoKFxuICAgICAgICA8TG9nTW9uaXRvckVudHJ5XG4gICAgICAgICAga2V5PXthY3Rpb25JZH1cbiAgICAgICAgICB0aGVtZT17dGhlbWV9XG4gICAgICAgICAgc2VsZWN0PXtzZWxlY3R9XG4gICAgICAgICAgYWN0aW9uPXthY3Rpb259XG4gICAgICAgICAgYWN0aW9uSWQ9e2FjdGlvbklkfVxuICAgICAgICAgIHN0YXRlPXtzdGF0ZX1cbiAgICAgICAgICBwcmV2aW91c1N0YXRlPXtwcmV2aW91c1N0YXRlfVxuICAgICAgICAgIGNvbGxhcHNlZD17c2tpcHBlZEFjdGlvbklkcy5pbmRleE9mKGFjdGlvbklkKSA+IC0xfVxuICAgICAgICAgIGluRnV0dXJlPXtpID4gY3VycmVudFN0YXRlSW5kZXh9XG4gICAgICAgICAgc2VsZWN0ZWQ9e2NvbnNlY3V0aXZlVG9nZ2xlU3RhcnRJZCA9PT0gaX1cbiAgICAgICAgICBlcnJvcj17ZXJyb3J9XG4gICAgICAgICAgZXhwYW5kQWN0aW9uUm9vdD17ZXhwYW5kQWN0aW9uUm9vdH1cbiAgICAgICAgICBleHBhbmRTdGF0ZVJvb3Q9e2V4cGFuZFN0YXRlUm9vdH1cbiAgICAgICAgICBtYXJrU3RhdGVEaWZmPXttYXJrU3RhdGVEaWZmfVxuICAgICAgICAgIG9uQWN0aW9uQ2xpY2s9e29uQWN0aW9uQ2xpY2t9XG4gICAgICAgICAgb25BY3Rpb25TaGlmdENsaWNrPXtvbkFjdGlvblNoaWZ0Q2xpY2t9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiA8ZGl2PntlbGVtZW50c308L2Rpdj47XG4gIH1cbn1cbiJdfQ==