"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _objType = _interopRequireDefault(require("./objType"));

var _JSONObjectNode = _interopRequireDefault(require("./JSONObjectNode"));

var _JSONArrayNode = _interopRequireDefault(require("./JSONArrayNode"));

var _JSONIterableNode = _interopRequireDefault(require("./JSONIterableNode"));

var _JSONValueNode = _interopRequireDefault(require("./JSONValueNode"));

var _excluded = ["getItemString", "keyPath", "labelRenderer", "styling", "value", "valueRenderer", "isCustomNode"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var JSONNode = function JSONNode(_ref) {
  var getItemString = _ref.getItemString,
      keyPath = _ref.keyPath,
      labelRenderer = _ref.labelRenderer,
      styling = _ref.styling,
      value = _ref.value,
      valueRenderer = _ref.valueRenderer,
      isCustomNode = _ref.isCustomNode,
      rest = _objectWithoutProperties(_ref, _excluded);

  var nodeType = isCustomNode(value) ? 'Custom' : (0, _objType["default"])(value);
  var simpleNodeProps = {
    getItemString: getItemString,
    key: keyPath[0],
    keyPath: keyPath,
    labelRenderer: labelRenderer,
    nodeType: nodeType,
    styling: styling,
    value: value,
    valueRenderer: valueRenderer
  };

  var nestedNodeProps = _objectSpread(_objectSpread(_objectSpread({}, rest), simpleNodeProps), {}, {
    data: value,
    isCustomNode: isCustomNode
  });

  switch (nodeType) {
    case 'Object':
    case 'Error':
    case 'WeakMap':
    case 'WeakSet':
      return /*#__PURE__*/_react["default"].createElement(_JSONObjectNode["default"], nestedNodeProps);

    case 'Array':
      return /*#__PURE__*/_react["default"].createElement(_JSONArrayNode["default"], nestedNodeProps);

    case 'Iterable':
    case 'Map':
    case 'Set':
      return /*#__PURE__*/_react["default"].createElement(_JSONIterableNode["default"], nestedNodeProps);

    case 'String':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter(raw) {
          return "\"".concat(raw, "\"");
        }
      }));

    case 'Number':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], simpleNodeProps);

    case 'Boolean':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter(raw) {
          return raw ? 'true' : 'false';
        }
      }));

    case 'Date':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter(raw) {
          return raw.toISOString();
        }
      }));

    case 'Null':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter() {
          return 'null';
        }
      }));

    case 'Undefined':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter() {
          return 'undefined';
        }
      }));

    case 'Function':
    case 'Symbol':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter(raw) {
          return raw.toString();
        }
      }));

    case 'Custom':
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], simpleNodeProps);

    default:
      return /*#__PURE__*/_react["default"].createElement(_JSONValueNode["default"], _extends({}, simpleNodeProps, {
        valueGetter: function valueGetter() {
          return "<".concat(nodeType, ">");
        }
      }));
  }
};

JSONNode.propTypes = {
  getItemString: _propTypes["default"].func.isRequired,
  keyPath: _propTypes["default"].arrayOf(_propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].number]).isRequired).isRequired,
  labelRenderer: _propTypes["default"].func.isRequired,
  styling: _propTypes["default"].func.isRequired,
  value: _propTypes["default"].any,
  valueRenderer: _propTypes["default"].func.isRequired,
  isCustomNode: _propTypes["default"].func.isRequired
};
var _default = JSONNode;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9KU09OTm9kZS50c3giXSwibmFtZXMiOlsiSlNPTk5vZGUiLCJnZXRJdGVtU3RyaW5nIiwia2V5UGF0aCIsImxhYmVsUmVuZGVyZXIiLCJzdHlsaW5nIiwidmFsdWUiLCJ2YWx1ZVJlbmRlcmVyIiwiaXNDdXN0b21Ob2RlIiwicmVzdCIsIm5vZGVUeXBlIiwic2ltcGxlTm9kZVByb3BzIiwia2V5IiwibmVzdGVkTm9kZVByb3BzIiwiZGF0YSIsInJhdyIsInRvSVNPU3RyaW5nIiwidG9TdHJpbmciLCJwcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJmdW5jIiwiaXNSZXF1aXJlZCIsImFycmF5T2YiLCJvbmVPZlR5cGUiLCJzdHJpbmciLCJudW1iZXIiLCJhbnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBU0EsSUFBTUEsUUFBd0MsR0FBRyxTQUEzQ0EsUUFBMkMsT0FTM0M7QUFBQSxNQVJKQyxhQVFJLFFBUkpBLGFBUUk7QUFBQSxNQVBKQyxPQU9JLFFBUEpBLE9BT0k7QUFBQSxNQU5KQyxhQU1JLFFBTkpBLGFBTUk7QUFBQSxNQUxKQyxPQUtJLFFBTEpBLE9BS0k7QUFBQSxNQUpKQyxLQUlJLFFBSkpBLEtBSUk7QUFBQSxNQUhKQyxhQUdJLFFBSEpBLGFBR0k7QUFBQSxNQUZKQyxZQUVJLFFBRkpBLFlBRUk7QUFBQSxNQUREQyxJQUNDOztBQUNKLE1BQU1DLFFBQVEsR0FBR0YsWUFBWSxDQUFDRixLQUFELENBQVosR0FBc0IsUUFBdEIsR0FBaUMseUJBQVFBLEtBQVIsQ0FBbEQ7QUFFQSxNQUFNSyxlQUFlLEdBQUc7QUFDdEJULElBQUFBLGFBQWEsRUFBYkEsYUFEc0I7QUFFdEJVLElBQUFBLEdBQUcsRUFBRVQsT0FBTyxDQUFDLENBQUQsQ0FGVTtBQUd0QkEsSUFBQUEsT0FBTyxFQUFQQSxPQUhzQjtBQUl0QkMsSUFBQUEsYUFBYSxFQUFiQSxh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R0FQRTtBQVFuQm5CLEVBQUFBLGFBQWEsRUFBRVksc0JBQVVDLElBQVYsQ0FBZUMsVUFSWDtBQVNuQmIsRUFBQUEsWUFBWSxFQUFFVyxzQkFBVUMsSUFBVixDQUFlQztBQVRWLENBQXJCO2VBWWVwQixRIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgb2JqVHlwZSBmcm9tICcuL29ialR5cGUnO1xuaW1wb3J0IEpTT05PYmplY3ROb2RlIGZyb20gJy4vSlNPTk9iamVjdE5vZGUnO1xuaW1wb3J0IEpTT05BcnJheU5vZGUgZnJvbSAnLi9KU09OQXJyYXlOb2RlJztcbmltcG9ydCBKU09OSXRlcmFibGVOb2RlIGZyb20gJy4vSlNPTkl0ZXJhYmxlTm9kZSc7XG5pbXBvcnQgSlNPTlZhbHVlTm9kZSBmcm9tICcuL0pTT05WYWx1ZU5vZGUnO1xuaW1wb3J0IHsgQ2lyY3VsYXJQcm9wc1Bhc3NlZFRocm91Z2hKU09OTm9kZSB9IGZyb20gJy4vdHlwZXMnO1xuXG5pbnRlcmZhY2UgUHJvcHMgZXh0ZW5kcyBDaXJjdWxhclByb3BzUGFzc2VkVGhyb3VnaEpTT05Ob2RlIHtcbiAga2V5UGF0aDogKHN0cmluZyB8IG51bWJlcilbXTtcbiAgdmFsdWU6IGFueTtcbiAgaXNDdXN0b21Ob2RlOiAodmFsdWU6IGFueSkgPT4gYm9vbGVhbjtcbn1cblxuY29uc3QgSlNPTk5vZGU6IFJlYWN0LkZ1bmN0aW9uQ29tcG9uZW50PFByb3BzPiA9ICh7XG4gIGdldEl0ZW1TdHJpbmcsXG4gIGtleVBhdGgsXG4gIGxhYmVsUmVuZGVyZXIsXG4gIHN0eWxpbmcsXG4gIHZhbHVlLFxuICB2YWx1ZVJlbmRlcmVyLFxuICBpc0N1c3RvbU5vZGUsXG4gIC4uLnJlc3Rcbn0pID0+IHtcbiAgY29uc3Qgbm9kZVR5cGUgPSBpc0N1c3RvbU5vZGUodmFsdWUpID8gJ0N1c3RvbScgOiBvYmpUeXBlKHZhbHVlKTtcblxuICBjb25zdCBzaW1wbGVOb2RlUHJvcHMgPSB7XG4gICAgZ2V0SXRlbVN0cmluZyxcbiAgICBrZXk6IGtleVBhdGhbMF0sXG4gICAga2V5UGF0aCxcbiAgICBsYWJlbFJlbmRlcmVyLFxuICAgIG5vZGVUeXBlLFxuICAgIHN0eWxpbmcsXG4gICAgdmFsdWUsXG4gICAgdmFsdWVSZW5kZXJlcixcbiAgfTtcblxuICBjb25zdCBuZXN0ZWROb2RlUHJvcHMgPSB7XG4gICAgLi4ucmVzdCxcbiAgICAuLi5zaW1wbGVOb2RlUHJvcHMsXG4gICAgZGF0YTogdmFsdWUsXG4gICAgaXNDdXN0b21Ob2RlLFxuICB9O1xuXG4gIHN3aXRjaCAobm9kZVR5cGUpIHtcbiAgICBjYXNlICdPYmplY3QnOlxuICAgIGNhc2UgJ0Vycm9yJzpcbiAgICBjYXNlICdXZWFrTWFwJzpcbiAgICBjYXNlICdXZWFrU2V0JzpcbiAgICAgIHJldHVybiA8SlNPTk9iamVjdE5vZGUgey4uLm5lc3RlZE5vZGVQcm9wc30gLz47XG4gICAgY2FzZSAnQXJyYXknOlxuICAgICAgcmV0dXJuIDxKU09OQXJyYXlOb2RlIHsuLi5uZXN0ZWROb2RlUHJvcHN9IC8+O1xuICAgIGNhc2UgJ0l0ZXJhYmxlJzpcbiAgICBjYXNlICdNYXAnOlxuICAgIGNhc2UgJ1NldCc6XG4gICAgICByZXR1cm4gPEpTT05JdGVyYWJsZU5vZGUgey4uLm5lc3RlZE5vZGVQcm9wc30gLz47XG4gICAgY2FzZSAnU3RyaW5nJzpcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxKU09OVmFsdWVOb2RlXG4gICAgICAgICAgey4uLnNpbXBsZU5vZGVQcm9wc31cbiAgICAgICAgICB2YWx1ZUdldHRlcj17KHJhdzogc3RyaW5nKSA9PiBgXCIke3Jhd31cImB9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIGNhc2UgJ051bWJlcic6XG4gICAgICByZXR1cm4gPEpTT05WYWx1ZU5vZGUgey4uLnNpbXBsZU5vZGVQcm9wc30gLz47XG4gICAgY2FzZSAnQm9vbGVhbic6XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8SlNPTlZhbHVlTm9kZVxuICAgICAgICAgIHsuLi5zaW1wbGVOb2RlUHJvcHN9XG4gICAgICAgICAgdmFsdWVHZXR0ZXI9eyhyYXcpID0+IChyYXcgPyAndHJ1ZScgOiAnZmFsc2UnKX1cbiAgICAgICAgLz5cbiAgICAgICk7XG4gICAgY2FzZSAnRGF0ZSc6XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8SlNPTlZhbHVlTm9kZVxuICAgICAgICAgIHsuLi5zaW1wbGVOb2RlUHJvcHN9XG4gICAgICAgICAgdmFsdWVHZXR0ZXI9eyhyYXcpID0+IHJhdy50b0lTT1N0cmluZygpfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgICBjYXNlICdOdWxsJzpcbiAgICAgIHJldHVybiA8SlNPTlZhbHVlTm9kZSB7Li4uc2ltcGxlTm9kZVByb3BzfSB2YWx1ZUdldHRlcj17KCkgPT4gJ251bGwnfSAvPjtcbiAgICBjYXNlICdVbmRlZmluZWQnOlxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPEpTT05WYWx1ZU5vZGUgey4uLnNpbXBsZU5vZGVQcm9wc30gdmFsdWVHZXR0ZXI9eygpID0+ICd1bmRlZmluZWQnfSAvPlxuICAgICAgKTtcbiAgICBjYXNlICdGdW5jdGlvbic6XG4gICAgY2FzZSAnU3ltYm9sJzpcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxKU09OVmFsdWVOb2RlXG4gICAgICAgICAgey4uLnNpbXBsZU5vZGVQcm9wc31cbiAgICAgICAgICB2YWx1ZUdldHRlcj17KHJhdykgPT4gcmF3LnRvU3RyaW5nKCl9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIGNhc2UgJ0N1c3RvbSc6XG4gICAgICByZXR1cm4gPEpTT05WYWx1ZU5vZGUgey4uLnNpbXBsZU5vZGVQcm9wc30gLz47XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxKU09OVmFsdWVOb2RlXG4gICAgICAgICAgey4uLnNpbXBsZU5vZGVQcm9wc31cbiAgICAgICAgICB2YWx1ZUdldHRlcj17KCkgPT4gYDwke25vZGVUeXBlfT5gfVxuICAgICAgICAvPlxuICAgICAgKTtcbiAgfVxufTtcblxuSlNPTk5vZGUucHJvcFR5cGVzID0ge1xuICBnZXRJdGVtU3RyaW5nOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBrZXlQYXRoOiBQcm9wVHlwZXMuYXJyYXlPZihcbiAgICBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyXSkuaXNSZXF1aXJlZFxuICApLmlzUmVxdWlyZWQsXG4gIGxhYmVsUmVuZGVyZXI6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHN0eWxpbmc6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gIHZhbHVlOiBQcm9wVHlwZXMuYW55LFxuICB2YWx1ZVJlbmRlcmVyOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBpc0N1c3RvbU5vZGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBKU09OTm9kZTtcbiJdfQ==